import { SPHERICAL_MERCATOR_SRS, WGS84 } from './constants';
interface Options {
    size?: number;
    antimeridian?: boolean;
}
interface XYZ {
    minX: number;
    maxX: number;
    minY: number;
    maxY: number;
}
type XY = [number, number];
type LonLat = [number, number];
type Zoom = number;
type West = number;
type South = number;
type East = number;
type North = number;
type BBox = [West, South, East, North];
type SRS = typeof SPHERICAL_MERCATOR_SRS | typeof WGS84;
export declare class SphericalMercator {
    #private;
    constructor(options?: Options);
    px(ll: LonLat, zoom: Zoom): XY;
    ll(px: XY, zoom: Zoom): LonLat;
    convert(bbox: BBox, to: SRS): BBox;
    inverse(xy: XY): LonLat;
    forward(ll: LonLat): XY;
    bbox(x: number, y: number, zoom: Zoom, tmsStyle?: boolean, srs?: string): BBox;
    xyz(bbox: BBox, zoom: Zoom, tmsStyle?: boolean, srs?: SRS): XYZ;
}
export {};
